// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AllowedAssetTokenSet extends ethereum.Event {
  get params(): AllowedAssetTokenSet__Params {
    return new AllowedAssetTokenSet__Params(this);
  }
}

export class AllowedAssetTokenSet__Params {
  _event: AllowedAssetTokenSet;

  constructor(event: AllowedAssetTokenSet) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get assetToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get isAllowed(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class AssetTokenLimitsSet extends ethereum.Event {
  get params(): AssetTokenLimitsSet__Params {
    return new AssetTokenLimitsSet__Params(this);
  }
}

export class AssetTokenLimitsSet__Params {
  _event: AssetTokenLimitsSet;

  constructor(event: AssetTokenLimitsSet) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get assetToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get assetDepositMin(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get assetDepositMax(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class AssetTokenRestrictionsSet extends ethereum.Event {
  get params(): AssetTokenRestrictionsSet__Params {
    return new AssetTokenRestrictionsSet__Params(this);
  }
}

export class AssetTokenRestrictionsSet__Params {
  _event: AssetTokenRestrictionsSet;

  constructor(event: AssetTokenRestrictionsSet) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get restrictionsEnabled(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class BasketManagerRegistered extends ethereum.Event {
  get params(): BasketManagerRegistered__Params {
    return new BasketManagerRegistered__Params(this);
  }
}

export class BasketManagerRegistered__Params {
  _event: BasketManagerRegistered;

  constructor(event: BasketManagerRegistered) {
    this._event = event;
  }

  get basketId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get basketManager(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DepositCapSet extends ethereum.Event {
  get params(): DepositCapSet__Params {
    return new DepositCapSet__Params(this);
  }
}

export class DepositCapSet__Params {
  _event: DepositCapSet;

  constructor(event: DepositCapSet) {
    this._event = event;
  }

  get assetToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get depositCap(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MaxNftsSet extends ethereum.Event {
  get params(): MaxNftsSet__Params {
    return new MaxNftsSet__Params(this);
  }
}

export class MaxNftsSet__Params {
  _event: MaxNftsSet;

  constructor(event: MaxNftsSet) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nftTokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get maxNfts(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PermsSetForBasket extends ethereum.Event {
  get params(): PermsSetForBasket__Params {
    return new PermsSetForBasket__Params(this);
  }
}

export class PermsSetForBasket__Params {
  _event: PermsSetForBasket;

  constructor(event: PermsSetForBasket) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get state(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class PermsSetForCharge extends ethereum.Event {
  get params(): PermsSetForCharge__Params {
    return new PermsSetForCharge__Params(this);
  }
}

export class PermsSetForCharge__Params {
  _event: PermsSetForCharge;

  constructor(event: PermsSetForCharge) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get state(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class PermsSetForTimelockAny extends ethereum.Event {
  get params(): PermsSetForTimelockAny__Params {
    return new PermsSetForTimelockAny__Params(this);
  }
}

export class PermsSetForTimelockAny__Params {
  _event: PermsSetForTimelockAny;

  constructor(event: PermsSetForTimelockAny) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get state(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class PermsSetForTimelockSelf extends ethereum.Event {
  get params(): PermsSetForTimelockSelf__Params {
    return new PermsSetForTimelockSelf__Params(this);
  }
}

export class PermsSetForTimelockSelf__Params {
  _event: PermsSetForTimelockSelf;

  constructor(event: PermsSetForTimelockSelf) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get state(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class RequiredBasketManagerSet extends ethereum.Event {
  get params(): RequiredBasketManagerSet__Params {
    return new RequiredBasketManagerSet__Params(this);
  }
}

export class RequiredBasketManagerSet__Params {
  _event: RequiredBasketManagerSet;

  constructor(event: RequiredBasketManagerSet) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get basketManager(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class RequiredWalletManagerSet extends ethereum.Event {
  get params(): RequiredWalletManagerSet__Params {
    return new RequiredWalletManagerSet__Params(this);
  }
}

export class RequiredWalletManagerSet__Params {
  _event: RequiredWalletManagerSet;

  constructor(event: RequiredWalletManagerSet) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get walletManager(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class TempLockExpirySet extends ethereum.Event {
  get params(): TempLockExpirySet__Params {
    return new TempLockExpirySet__Params(this);
  }
}

export class TempLockExpirySet__Params {
  _event: TempLockExpirySet;

  constructor(event: TempLockExpirySet) {
    this._event = event;
  }

  get expiryBlocks(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class TokenCreatorAnnuitiesRedirected extends ethereum.Event {
  get params(): TokenCreatorAnnuitiesRedirected__Params {
    return new TokenCreatorAnnuitiesRedirected__Params(this);
  }
}

export class TokenCreatorAnnuitiesRedirected__Params {
  _event: TokenCreatorAnnuitiesRedirected;

  constructor(event: TokenCreatorAnnuitiesRedirected) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get redirectAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TokenCreatorConfigsSet extends ethereum.Event {
  get params(): TokenCreatorConfigsSet__Params {
    return new TokenCreatorConfigsSet__Params(this);
  }
}

export class TokenCreatorConfigsSet__Params {
  _event: TokenCreatorConfigsSet;

  constructor(event: TokenCreatorConfigsSet) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get creatorAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get annuityPercent(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class WalletManagerRegistered extends ethereum.Event {
  get params(): WalletManagerRegistered__Params {
    return new WalletManagerRegistered__Params(this);
  }
}

export class WalletManagerRegistered__Params {
  _event: WalletManagerRegistered;

  constructor(event: WalletManagerRegistered) {
    this._event = event;
  }

  get walletManagerId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get walletManager(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class WithdrawStuckERC20 extends ethereum.Event {
  get params(): WithdrawStuckERC20__Params {
    return new WithdrawStuckERC20__Params(this);
  }
}

export class WithdrawStuckERC20__Params {
  _event: WithdrawStuckERC20;

  constructor(event: WithdrawStuckERC20) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class WithdrawStuckERC721 extends ethereum.Event {
  get params(): WithdrawStuckERC721__Params {
    return new WithdrawStuckERC721__Params(this);
  }
}

export class WithdrawStuckERC721__Params {
  _event: WithdrawStuckERC721;

  constructor(event: WithdrawStuckERC721) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class WithdrawStuckEther extends ethereum.Event {
  get params(): WithdrawStuckEther__Params {
    return new WithdrawStuckEther__Params(this);
  }
}

export class WithdrawStuckEther__Params {
  _event: WithdrawStuckEther;

  constructor(event: WithdrawStuckEther) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ChargedSettings__getAssetRequirementsResult {
  value0: string;
  value1: boolean;
  value2: boolean;
  value3: boolean;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;

  constructor(
    value0: string,
    value1: boolean,
    value2: boolean,
    value3: boolean,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }
}

export class ChargedSettings__getCreatorAnnuitiesResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class ChargedSettings__getNftAssetRequirementsResult {
  value0: string;
  value1: boolean;
  value2: BigInt;

  constructor(value0: string, value1: boolean, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class ChargedSettings__getTimelockApprovalsResult {
  value0: boolean;
  value1: boolean;

  constructor(value0: boolean, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }
}

export class ChargedSettings extends ethereum.SmartContract {
  static bind(address: Address): ChargedSettings {
    return new ChargedSettings("ChargedSettings", address);
  }

  getAssetRequirements(
    contractAddress: Address,
    assetToken: Address
  ): ChargedSettings__getAssetRequirementsResult {
    let result = super.call(
      "getAssetRequirements",
      "getAssetRequirements(address,address):(string,bool,bool,bool,uint256,uint256,uint256)",
      [
        ethereum.Value.fromAddress(contractAddress),
        ethereum.Value.fromAddress(assetToken)
      ]
    );

    return new ChargedSettings__getAssetRequirementsResult(
      result[0].toString(),
      result[1].toBoolean(),
      result[2].toBoolean(),
      result[3].toBoolean(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt()
    );
  }

  try_getAssetRequirements(
    contractAddress: Address,
    assetToken: Address
  ): ethereum.CallResult<ChargedSettings__getAssetRequirementsResult> {
    let result = super.tryCall(
      "getAssetRequirements",
      "getAssetRequirements(address,address):(string,bool,bool,bool,uint256,uint256,uint256)",
      [
        ethereum.Value.fromAddress(contractAddress),
        ethereum.Value.fromAddress(assetToken)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ChargedSettings__getAssetRequirementsResult(
        value[0].toString(),
        value[1].toBoolean(),
        value[2].toBoolean(),
        value[3].toBoolean(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt()
      )
    );
  }

  getBasketManager(basketId: string): Address {
    let result = super.call(
      "getBasketManager",
      "getBasketManager(string):(address)",
      [ethereum.Value.fromString(basketId)]
    );

    return result[0].toAddress();
  }

  try_getBasketManager(basketId: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getBasketManager",
      "getBasketManager(string):(address)",
      [ethereum.Value.fromString(basketId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCreatorAnnuities(
    contractAddress: Address,
    tokenId: BigInt
  ): ChargedSettings__getCreatorAnnuitiesResult {
    let result = super.call(
      "getCreatorAnnuities",
      "getCreatorAnnuities(address,uint256):(address,uint256)",
      [
        ethereum.Value.fromAddress(contractAddress),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );

    return new ChargedSettings__getCreatorAnnuitiesResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_getCreatorAnnuities(
    contractAddress: Address,
    tokenId: BigInt
  ): ethereum.CallResult<ChargedSettings__getCreatorAnnuitiesResult> {
    let result = super.tryCall(
      "getCreatorAnnuities",
      "getCreatorAnnuities(address,uint256):(address,uint256)",
      [
        ethereum.Value.fromAddress(contractAddress),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ChargedSettings__getCreatorAnnuitiesResult(
        value[0].toAddress(),
        value[1].toBigInt()
      )
    );
  }

  getCreatorAnnuitiesRedirect(
    contractAddress: Address,
    tokenId: BigInt
  ): Address {
    let result = super.call(
      "getCreatorAnnuitiesRedirect",
      "getCreatorAnnuitiesRedirect(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(contractAddress),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );

    return result[0].toAddress();
  }

  try_getCreatorAnnuitiesRedirect(
    contractAddress: Address,
    tokenId: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getCreatorAnnuitiesRedirect",
      "getCreatorAnnuitiesRedirect(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(contractAddress),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getNftAssetRequirements(
    contractAddress: Address,
    nftTokenAddress: Address
  ): ChargedSettings__getNftAssetRequirementsResult {
    let result = super.call(
      "getNftAssetRequirements",
      "getNftAssetRequirements(address,address):(string,bool,uint256)",
      [
        ethereum.Value.fromAddress(contractAddress),
        ethereum.Value.fromAddress(nftTokenAddress)
      ]
    );

    return new ChargedSettings__getNftAssetRequirementsResult(
      result[0].toString(),
      result[1].toBoolean(),
      result[2].toBigInt()
    );
  }

  try_getNftAssetRequirements(
    contractAddress: Address,
    nftTokenAddress: Address
  ): ethereum.CallResult<ChargedSettings__getNftAssetRequirementsResult> {
    let result = super.tryCall(
      "getNftAssetRequirements",
      "getNftAssetRequirements(address,address):(string,bool,uint256)",
      [
        ethereum.Value.fromAddress(contractAddress),
        ethereum.Value.fromAddress(nftTokenAddress)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ChargedSettings__getNftAssetRequirementsResult(
        value[0].toString(),
        value[1].toBoolean(),
        value[2].toBigInt()
      )
    );
  }

  getTempLockExpiryBlocks(): BigInt {
    let result = super.call(
      "getTempLockExpiryBlocks",
      "getTempLockExpiryBlocks():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getTempLockExpiryBlocks(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTempLockExpiryBlocks",
      "getTempLockExpiryBlocks():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTimelockApprovals(
    operator: Address
  ): ChargedSettings__getTimelockApprovalsResult {
    let result = super.call(
      "getTimelockApprovals",
      "getTimelockApprovals(address):(bool,bool)",
      [ethereum.Value.fromAddress(operator)]
    );

    return new ChargedSettings__getTimelockApprovalsResult(
      result[0].toBoolean(),
      result[1].toBoolean()
    );
  }

  try_getTimelockApprovals(
    operator: Address
  ): ethereum.CallResult<ChargedSettings__getTimelockApprovalsResult> {
    let result = super.tryCall(
      "getTimelockApprovals",
      "getTimelockApprovals(address):(bool,bool)",
      [ethereum.Value.fromAddress(operator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ChargedSettings__getTimelockApprovalsResult(
        value[0].toBoolean(),
        value[1].toBoolean()
      )
    );
  }

  getWalletManager(walletManagerId: string): Address {
    let result = super.call(
      "getWalletManager",
      "getWalletManager(string):(address)",
      [ethereum.Value.fromString(walletManagerId)]
    );

    return result[0].toAddress();
  }

  try_getWalletManager(walletManagerId: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getWalletManager",
      "getWalletManager(string):(address)",
      [ethereum.Value.fromString(walletManagerId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isContractOwner(contractAddress: Address, account: Address): boolean {
    let result = super.call(
      "isContractOwner",
      "isContractOwner(address,address):(bool)",
      [
        ethereum.Value.fromAddress(contractAddress),
        ethereum.Value.fromAddress(account)
      ]
    );

    return result[0].toBoolean();
  }

  try_isContractOwner(
    contractAddress: Address,
    account: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isContractOwner",
      "isContractOwner(address,address):(bool)",
      [
        ethereum.Value.fromAddress(contractAddress),
        ethereum.Value.fromAddress(account)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isNftBasketEnabled(basketId: string): boolean {
    let result = super.call(
      "isNftBasketEnabled",
      "isNftBasketEnabled(string):(bool)",
      [ethereum.Value.fromString(basketId)]
    );

    return result[0].toBoolean();
  }

  try_isNftBasketEnabled(basketId: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isNftBasketEnabled",
      "isNftBasketEnabled(string):(bool)",
      [ethereum.Value.fromString(basketId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isWalletManagerEnabled(walletManagerId: string): boolean {
    let result = super.call(
      "isWalletManagerEnabled",
      "isWalletManagerEnabled(string):(bool)",
      [ethereum.Value.fromString(walletManagerId)]
    );

    return result[0].toBoolean();
  }

  try_isWalletManagerEnabled(
    walletManagerId: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isWalletManagerEnabled",
      "isWalletManagerEnabled(string):(bool)",
      [ethereum.Value.fromString(walletManagerId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  trustedForwarder(): Address {
    let result = super.call(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_trustedForwarder(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  versionRecipient(): string {
    let result = super.call(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );

    return result[0].toString();
  }

  try_versionRecipient(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class EnableNftContractsCall extends ethereum.Call {
  get inputs(): EnableNftContractsCall__Inputs {
    return new EnableNftContractsCall__Inputs(this);
  }

  get outputs(): EnableNftContractsCall__Outputs {
    return new EnableNftContractsCall__Outputs(this);
  }
}

export class EnableNftContractsCall__Inputs {
  _call: EnableNftContractsCall;

  constructor(call: EnableNftContractsCall) {
    this._call = call;
  }

  get contracts(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class EnableNftContractsCall__Outputs {
  _call: EnableNftContractsCall;

  constructor(call: EnableNftContractsCall) {
    this._call = call;
  }
}

export class RegisterBasketManagerCall extends ethereum.Call {
  get inputs(): RegisterBasketManagerCall__Inputs {
    return new RegisterBasketManagerCall__Inputs(this);
  }

  get outputs(): RegisterBasketManagerCall__Outputs {
    return new RegisterBasketManagerCall__Outputs(this);
  }
}

export class RegisterBasketManagerCall__Inputs {
  _call: RegisterBasketManagerCall;

  constructor(call: RegisterBasketManagerCall) {
    this._call = call;
  }

  get basketId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get basketManager(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RegisterBasketManagerCall__Outputs {
  _call: RegisterBasketManagerCall;

  constructor(call: RegisterBasketManagerCall) {
    this._call = call;
  }
}

export class RegisterWalletManagerCall extends ethereum.Call {
  get inputs(): RegisterWalletManagerCall__Inputs {
    return new RegisterWalletManagerCall__Inputs(this);
  }

  get outputs(): RegisterWalletManagerCall__Outputs {
    return new RegisterWalletManagerCall__Outputs(this);
  }
}

export class RegisterWalletManagerCall__Inputs {
  _call: RegisterWalletManagerCall;

  constructor(call: RegisterWalletManagerCall) {
    this._call = call;
  }

  get walletManagerId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get walletManager(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RegisterWalletManagerCall__Outputs {
  _call: RegisterWalletManagerCall;

  constructor(call: RegisterWalletManagerCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAllowedAssetTokenCall extends ethereum.Call {
  get inputs(): SetAllowedAssetTokenCall__Inputs {
    return new SetAllowedAssetTokenCall__Inputs(this);
  }

  get outputs(): SetAllowedAssetTokenCall__Outputs {
    return new SetAllowedAssetTokenCall__Outputs(this);
  }
}

export class SetAllowedAssetTokenCall__Inputs {
  _call: SetAllowedAssetTokenCall;

  constructor(call: SetAllowedAssetTokenCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get assetToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get isAllowed(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class SetAllowedAssetTokenCall__Outputs {
  _call: SetAllowedAssetTokenCall;

  constructor(call: SetAllowedAssetTokenCall) {
    this._call = call;
  }
}

export class SetAssetTokenLimitsCall extends ethereum.Call {
  get inputs(): SetAssetTokenLimitsCall__Inputs {
    return new SetAssetTokenLimitsCall__Inputs(this);
  }

  get outputs(): SetAssetTokenLimitsCall__Outputs {
    return new SetAssetTokenLimitsCall__Outputs(this);
  }
}

export class SetAssetTokenLimitsCall__Inputs {
  _call: SetAssetTokenLimitsCall;

  constructor(call: SetAssetTokenLimitsCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get assetToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get depositMin(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get depositMax(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SetAssetTokenLimitsCall__Outputs {
  _call: SetAssetTokenLimitsCall;

  constructor(call: SetAssetTokenLimitsCall) {
    this._call = call;
  }
}

export class SetAssetTokenRestrictionsCall extends ethereum.Call {
  get inputs(): SetAssetTokenRestrictionsCall__Inputs {
    return new SetAssetTokenRestrictionsCall__Inputs(this);
  }

  get outputs(): SetAssetTokenRestrictionsCall__Outputs {
    return new SetAssetTokenRestrictionsCall__Outputs(this);
  }
}

export class SetAssetTokenRestrictionsCall__Inputs {
  _call: SetAssetTokenRestrictionsCall;

  constructor(call: SetAssetTokenRestrictionsCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get restrictionsEnabled(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetAssetTokenRestrictionsCall__Outputs {
  _call: SetAssetTokenRestrictionsCall;

  constructor(call: SetAssetTokenRestrictionsCall) {
    this._call = call;
  }
}

export class SetCreatorAnnuitiesCall extends ethereum.Call {
  get inputs(): SetCreatorAnnuitiesCall__Inputs {
    return new SetCreatorAnnuitiesCall__Inputs(this);
  }

  get outputs(): SetCreatorAnnuitiesCall__Outputs {
    return new SetCreatorAnnuitiesCall__Outputs(this);
  }
}

export class SetCreatorAnnuitiesCall__Inputs {
  _call: SetCreatorAnnuitiesCall;

  constructor(call: SetCreatorAnnuitiesCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get creator(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get annuityPercent(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SetCreatorAnnuitiesCall__Outputs {
  _call: SetCreatorAnnuitiesCall;

  constructor(call: SetCreatorAnnuitiesCall) {
    this._call = call;
  }
}

export class SetCreatorAnnuitiesRedirectCall extends ethereum.Call {
  get inputs(): SetCreatorAnnuitiesRedirectCall__Inputs {
    return new SetCreatorAnnuitiesRedirectCall__Inputs(this);
  }

  get outputs(): SetCreatorAnnuitiesRedirectCall__Outputs {
    return new SetCreatorAnnuitiesRedirectCall__Outputs(this);
  }
}

export class SetCreatorAnnuitiesRedirectCall__Inputs {
  _call: SetCreatorAnnuitiesRedirectCall;

  constructor(call: SetCreatorAnnuitiesRedirectCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get creator(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get receiver(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class SetCreatorAnnuitiesRedirectCall__Outputs {
  _call: SetCreatorAnnuitiesRedirectCall;

  constructor(call: SetCreatorAnnuitiesRedirectCall) {
    this._call = call;
  }
}

export class SetDepositCapCall extends ethereum.Call {
  get inputs(): SetDepositCapCall__Inputs {
    return new SetDepositCapCall__Inputs(this);
  }

  get outputs(): SetDepositCapCall__Outputs {
    return new SetDepositCapCall__Outputs(this);
  }
}

export class SetDepositCapCall__Inputs {
  _call: SetDepositCapCall;

  constructor(call: SetDepositCapCall) {
    this._call = call;
  }

  get assetToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get cap(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetDepositCapCall__Outputs {
  _call: SetDepositCapCall;

  constructor(call: SetDepositCapCall) {
    this._call = call;
  }
}

export class SetMaxNftsCall extends ethereum.Call {
  get inputs(): SetMaxNftsCall__Inputs {
    return new SetMaxNftsCall__Inputs(this);
  }

  get outputs(): SetMaxNftsCall__Outputs {
    return new SetMaxNftsCall__Outputs(this);
  }
}

export class SetMaxNftsCall__Inputs {
  _call: SetMaxNftsCall;

  constructor(call: SetMaxNftsCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get nftTokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get maxNfts(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetMaxNftsCall__Outputs {
  _call: SetMaxNftsCall;

  constructor(call: SetMaxNftsCall) {
    this._call = call;
  }
}

export class SetPermsForBasketCall extends ethereum.Call {
  get inputs(): SetPermsForBasketCall__Inputs {
    return new SetPermsForBasketCall__Inputs(this);
  }

  get outputs(): SetPermsForBasketCall__Outputs {
    return new SetPermsForBasketCall__Outputs(this);
  }
}

export class SetPermsForBasketCall__Inputs {
  _call: SetPermsForBasketCall;

  constructor(call: SetPermsForBasketCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get state(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetPermsForBasketCall__Outputs {
  _call: SetPermsForBasketCall;

  constructor(call: SetPermsForBasketCall) {
    this._call = call;
  }
}

export class SetPermsForChargeCall extends ethereum.Call {
  get inputs(): SetPermsForChargeCall__Inputs {
    return new SetPermsForChargeCall__Inputs(this);
  }

  get outputs(): SetPermsForChargeCall__Outputs {
    return new SetPermsForChargeCall__Outputs(this);
  }
}

export class SetPermsForChargeCall__Inputs {
  _call: SetPermsForChargeCall;

  constructor(call: SetPermsForChargeCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get state(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetPermsForChargeCall__Outputs {
  _call: SetPermsForChargeCall;

  constructor(call: SetPermsForChargeCall) {
    this._call = call;
  }
}

export class SetPermsForTimelockAnyCall extends ethereum.Call {
  get inputs(): SetPermsForTimelockAnyCall__Inputs {
    return new SetPermsForTimelockAnyCall__Inputs(this);
  }

  get outputs(): SetPermsForTimelockAnyCall__Outputs {
    return new SetPermsForTimelockAnyCall__Outputs(this);
  }
}

export class SetPermsForTimelockAnyCall__Inputs {
  _call: SetPermsForTimelockAnyCall;

  constructor(call: SetPermsForTimelockAnyCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get state(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetPermsForTimelockAnyCall__Outputs {
  _call: SetPermsForTimelockAnyCall;

  constructor(call: SetPermsForTimelockAnyCall) {
    this._call = call;
  }
}

export class SetPermsForTimelockSelfCall extends ethereum.Call {
  get inputs(): SetPermsForTimelockSelfCall__Inputs {
    return new SetPermsForTimelockSelfCall__Inputs(this);
  }

  get outputs(): SetPermsForTimelockSelfCall__Outputs {
    return new SetPermsForTimelockSelfCall__Outputs(this);
  }
}

export class SetPermsForTimelockSelfCall__Inputs {
  _call: SetPermsForTimelockSelfCall;

  constructor(call: SetPermsForTimelockSelfCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get state(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetPermsForTimelockSelfCall__Outputs {
  _call: SetPermsForTimelockSelfCall;

  constructor(call: SetPermsForTimelockSelfCall) {
    this._call = call;
  }
}

export class SetRequiredBasketManagerCall extends ethereum.Call {
  get inputs(): SetRequiredBasketManagerCall__Inputs {
    return new SetRequiredBasketManagerCall__Inputs(this);
  }

  get outputs(): SetRequiredBasketManagerCall__Outputs {
    return new SetRequiredBasketManagerCall__Outputs(this);
  }
}

export class SetRequiredBasketManagerCall__Inputs {
  _call: SetRequiredBasketManagerCall;

  constructor(call: SetRequiredBasketManagerCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get basketManager(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetRequiredBasketManagerCall__Outputs {
  _call: SetRequiredBasketManagerCall;

  constructor(call: SetRequiredBasketManagerCall) {
    this._call = call;
  }
}

export class SetRequiredWalletManagerCall extends ethereum.Call {
  get inputs(): SetRequiredWalletManagerCall__Inputs {
    return new SetRequiredWalletManagerCall__Inputs(this);
  }

  get outputs(): SetRequiredWalletManagerCall__Outputs {
    return new SetRequiredWalletManagerCall__Outputs(this);
  }
}

export class SetRequiredWalletManagerCall__Inputs {
  _call: SetRequiredWalletManagerCall;

  constructor(call: SetRequiredWalletManagerCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get walletManager(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetRequiredWalletManagerCall__Outputs {
  _call: SetRequiredWalletManagerCall;

  constructor(call: SetRequiredWalletManagerCall) {
    this._call = call;
  }
}

export class SetTempLockExpiryBlocksCall extends ethereum.Call {
  get inputs(): SetTempLockExpiryBlocksCall__Inputs {
    return new SetTempLockExpiryBlocksCall__Inputs(this);
  }

  get outputs(): SetTempLockExpiryBlocksCall__Outputs {
    return new SetTempLockExpiryBlocksCall__Outputs(this);
  }
}

export class SetTempLockExpiryBlocksCall__Inputs {
  _call: SetTempLockExpiryBlocksCall;

  constructor(call: SetTempLockExpiryBlocksCall) {
    this._call = call;
  }

  get numBlocks(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTempLockExpiryBlocksCall__Outputs {
  _call: SetTempLockExpiryBlocksCall;

  constructor(call: SetTempLockExpiryBlocksCall) {
    this._call = call;
  }
}

export class SetTrustedForwarderCall extends ethereum.Call {
  get inputs(): SetTrustedForwarderCall__Inputs {
    return new SetTrustedForwarderCall__Inputs(this);
  }

  get outputs(): SetTrustedForwarderCall__Outputs {
    return new SetTrustedForwarderCall__Outputs(this);
  }
}

export class SetTrustedForwarderCall__Inputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }

  get _trustedForwarder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTrustedForwarderCall__Outputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawERC721Call extends ethereum.Call {
  get inputs(): WithdrawERC721Call__Inputs {
    return new WithdrawERC721Call__Inputs(this);
  }

  get outputs(): WithdrawERC721Call__Outputs {
    return new WithdrawERC721Call__Outputs(this);
  }
}

export class WithdrawERC721Call__Inputs {
  _call: WithdrawERC721Call;

  constructor(call: WithdrawERC721Call) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class WithdrawERC721Call__Outputs {
  _call: WithdrawERC721Call;

  constructor(call: WithdrawERC721Call) {
    this._call = call;
  }
}

export class WithdrawErc20Call extends ethereum.Call {
  get inputs(): WithdrawErc20Call__Inputs {
    return new WithdrawErc20Call__Inputs(this);
  }

  get outputs(): WithdrawErc20Call__Outputs {
    return new WithdrawErc20Call__Outputs(this);
  }
}

export class WithdrawErc20Call__Inputs {
  _call: WithdrawErc20Call;

  constructor(call: WithdrawErc20Call) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class WithdrawErc20Call__Outputs {
  _call: WithdrawErc20Call;

  constructor(call: WithdrawErc20Call) {
    this._call = call;
  }
}

export class WithdrawEtherCall extends ethereum.Call {
  get inputs(): WithdrawEtherCall__Inputs {
    return new WithdrawEtherCall__Inputs(this);
  }

  get outputs(): WithdrawEtherCall__Outputs {
    return new WithdrawEtherCall__Outputs(this);
  }
}

export class WithdrawEtherCall__Inputs {
  _call: WithdrawEtherCall;

  constructor(call: WithdrawEtherCall) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawEtherCall__Outputs {
  _call: WithdrawEtherCall;

  constructor(call: WithdrawEtherCall) {
    this._call = call;
  }
}
